<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>All Products | WheelMaster</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Bootstrap Icons -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
  <!-- Custom CSS -->
  <style>
    :root {
      --primary-color: #ff6600;
      --dark-color: #222;
      --light-color: #f8f9fa;
    }
    
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    
    .navbar {
      background-color: var(--dark-color);
    }
    
    .filter-sidebar {
      background-color: white;
      border-radius: 8px;
      padding: 1.5rem;
      box-shadow: 0 2px 10px rgba(0,0,0,0.05);
      position: sticky;
      top: 20px;
    }
    
    .filter-heading {
      font-size: 1.2rem;
      font-weight: 600;
      margin-bottom: 1rem;
    }
    
    .filter-group {
      margin-bottom: 1.5rem;
    }
    
    .product-card {
      background-color: white;
      border-radius: 8px;
      overflow: hidden;
      transition: transform 0.3s, box-shadow 0.3s;
      height: 100%;
      box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    }
    
    .product-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 20px rgba(0,0,0,0.1);
    }
    
    .product-img-container {
      position: relative;
      padding-top: 100%; /* 1:1 Aspect Ratio */
      overflow: hidden;
      background-color: #f8f8f8;
    }
    
    .product-img {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: contain;
      padding: 1rem;
    }
    
    .product-info {
      padding: 1rem;
    }
    
    .product-title {
      font-weight: 600;
      margin-bottom: 0.5rem;
      font-size: 1.1rem;
      color: var(--dark-color);
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
      height: 2.8rem;
    }
    
    .product-brand {
      color: #666;
      font-size: 0.9rem;
      margin-bottom: 0.5rem;
    }
    
    .product-price {
      color: var(--primary-color);
      font-weight: 700;
      font-size: 1.2rem;
    }
    
    .product-original-price {
      text-decoration: line-through;
      color: #999;
      font-size: 0.9rem;
      margin-left: 0.5rem;
    }
    
    .product-discount {
      position: absolute;
      top: 10px;
      right: 10px;
      background-color: var(--primary-color);
      color: white;
      font-weight: 600;
      font-size: 0.8rem;
      padding: 0.25rem 0.5rem;
      border-radius: 4px;
    }
    
    .product-actions {
      display: flex;
      justify-content: space-between;
      margin-top: 1rem;
    }
    
    .btn-primary {
      background-color: var(--primary-color);
      border-color: var(--primary-color);
    }
    
    .btn-primary:hover {
      background-color: #e55c00;
      border-color: #e55c00;
    }
    
    .btn-outline-primary {
      color: var(--primary-color);
      border-color: var(--primary-color);
    }
    
    .btn-outline-primary:hover {
      background-color: var(--primary-color);
      color: white;
    }
    
    .pagination .page-link {
      color: var(--dark-color);
    }
    
    .pagination .page-item.active .page-link {
      background-color: var(--primary-color);
      border-color: var(--primary-color);
      color: white;
    }
    
    .product-specs {
      font-size: 0.85rem;
      color: #666;
      margin-bottom: 0.5rem;
    }
    
    .product-specs span {
      margin-right: 0.5rem;
    }
    
    .stock-status {
      font-size: 0.85rem;
      margin-bottom: 0.5rem;
    }
    
    .in-stock {
      color: #28a745;
    }
    
    .low-stock {
      color: #ffc107;
    }
    
    .out-of-stock {
      color: #dc3545;
    }
    
    .active-filter {
      display: inline-block;
      background-color: #f0f0f0;
      padding: 0.3rem 0.6rem;
      border-radius: 4px;
      margin-right: 0.5rem;
      margin-bottom: 0.5rem;
      font-size: 0.85rem;
    }
    
    .active-filter .close {
      margin-left: 0.5rem;
      font-weight: bold;
      cursor: pointer;
    }
    
    .price-range-slider {
      margin-top: 1rem;
    }
    
    .price-inputs {
      display: flex;
      justify-content: space-between;
      margin-top: 0.5rem;
    }
    
    .price-inputs input {
      width: 45%;
    }
    
    @media (max-width: 767.98px) {
      .filter-sidebar {
        position: static;
        margin-bottom: 2rem;
      }
      
      .filter-toggle {
        display: block;
        margin-bottom: 1rem;
      }
      
      .filter-content {
        display: none;
      }
      
      .filter-content.show {
        display: block;
      }
    }
  </style>
</head>
<body>
  <!-- Header would be included here -->
  
  <div class="container py-4">
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/" class="text-decoration-none">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">All Products</li>
      </ol>
    </nav>

    <div class="row">
      <!-- Sidebar Filters -->
      <div class="col-lg-3 mb-4">
        <div class="filter-sidebar">
          <div class="d-flex justify-content-between align-items-center mb-3">
            <h4 class="filter-heading m-0">Filters</h4>
            <button class="btn btn-sm btn-outline-secondary d-lg-none filter-toggle">
              <i class="bi bi-funnel"></i> Toggle Filters
            </button>
          </div>
          
          <div class="filter-content">
            <!-- Active Filters -->
            <% if (activeFilters && Object.keys(activeFilters).length > 0) { %>
              <div class="mb-3">
                <h5 class="fs-6 fw-semibold">Active Filters</h5>
                <div class="d-flex flex-wrap">
                  <% for (const [key, value] of Object.entries(activeFilters)) { %>
                    <% if (Array.isArray(value)) { %>
                      <% value.forEach(val => { %>
                        <div class="active-filter">
                          <%= formatFilterName(key) %>: <%= val %>
                          <span class="close" data-filter="<%= key %>" data-value="<%= val %>">&times;</span>
                        </div>
                      <% }) %>
                    <% } else if (key === 'priceRange') { %>
                      <div class="active-filter">
                        Price: $<%= value[0] %> - $<%= value[1] %>
                        <span class="close" data-filter="<%= key %>">&times;</span>
                      </div>
                    <% } else { %>
                      <div class="active-filter">
                        <%= formatFilterName(key) %>: <%= value %>
                        <span class="close" data-filter="<%= key %>">&times;</span>
                      </div>
                    <% } %>
                  <% } %>
                  <button class="btn btn-sm btn-outline-danger ms-2" id="clearAllFilters">Clear All</button>
                </div>
              </div>
            <% } %>
            
            <!-- Price Range Filter -->
            <div class="filter-group">
              <h5 class="fs-6 fw-semibold">Price Range</h5>
              <div class="price-range-slider">
                <input type="range" class="form-range" id="priceRangeSlider" min="<%= priceRange.min %>" max="<%= priceRange.max %>" step="10" value="<%= activeFilters && activeFilters.priceRange ? activeFilters.priceRange[1] : priceRange.max %>">
                <div class="price-inputs">
                  <div class="input-group input-group-sm">
                    <span class="input-group-text">$</span>
                    <input type="number" class="form-control" id="minPrice" value="<%= activeFilters && activeFilters.priceRange ? activeFilters.priceRange[0] : priceRange.min %>" min="<%= priceRange.min %>" max="<%= priceRange.max %>">
                  </div>
                  <div class="input-group input-group-sm">
                    <span class="input-group-text">$</span>
                    <input type="number" class="form-control" id="maxPrice" value="<%= activeFilters && activeFilters.priceRange ? activeFilters.priceRange[1] : priceRange.max %>" min="<%= priceRange.min %>" max="<%= priceRange.max %>">
                  </div>
                </div>
              </div>
              <button class="btn btn-sm btn-primary w-100 mt-2" id="applyPriceFilter">Apply</button>
            </div>
            
            <!-- Brand Filter -->
            <div class="filter-group">
              <h5 class="fs-6 fw-semibold">Brand</h5>
              <div class="mb-2">
                <input type="text" class="form-control form-control-sm" id="brandSearch" placeholder="Search brands...">
              </div>
              <div class="overflow-auto" style="max-height: 200px;">
                <% if (brands && brands.length > 0) { %>
                  <% brands.forEach(brand => { %>
                    <div class="form-check brand-item">
                      <input 
                        class="form-check-input" 
                        type="checkbox" 
                        id="brand-<%= brand.replace(/\s+/g, '-').toLowerCase() %>" 
                        name="brand" 
                        value="<%= brand %>"
                        <%= activeFilters && activeFilters.brand && activeFilters.brand.includes(brand) ? 'checked' : '' %>
                      >
                      <label class="form-check-label" for="brand-<%= brand.replace(/\s+/g, '-').toLowerCase() %>">
                        <%= brand %>
                      </label>
                    </div>
                  <% }) %>
                <% } else { %>
                  <p class="text-muted small">No brands available</p>
                <% } %>
              </div>
            </div>
            
            <!-- Size Filter -->
            <div class="filter-group">
              <h5 class="fs-6 fw-semibold">Size</h5>
              <div class="overflow-auto" style="max-height: 200px;">
                <% if (sizes && sizes.length > 0) { %>
                  <% sizes.forEach(size => { %>
                    <div class="form-check">
                      <input 
                        class="form-check-input" 
                        type="checkbox" 
                        id="size-<%= size.replace(/\s+/g, '-').replace(/"/g, '').toLowerCase() %>" 
                        name="sizes" 
                        value="<%= size %>"
                        <%= activeFilters && activeFilters.sizes && activeFilters.sizes.includes(size) ? 'checked' : '' %>
                      >
                      <label class="form-check-label" for="size-<%= size.replace(/\s+/g, '-').replace(/"/g, '').toLowerCase() %>">
                        <%= size %>
                      </label>
                    </div>
                  <% }) %>
                <% } else { %>
                  <p class="text-muted small">No sizes available</p>
                <% } %>
              </div>
            </div>
            
            <!-- Material Filter -->
            <div class="filter-group">
              <h5 class="fs-6 fw-semibold">Material</h5>
              <div class="overflow-auto" style="max-height: 200px;">
                <% if (materials && materials.length > 0) { %>
                  <% materials.forEach(material => { %>
                    <div class="form-check">
                      <input 
                        class="form-check-input" 
                        type="checkbox" 
                        id="material-<%= material.replace(/\s+/g, '-').toLowerCase() %>" 
                        name="rimMaterial" 
                        value="<%= material %>"
                        <%= activeFilters && activeFilters.rimMaterial && activeFilters.rimMaterial.includes(material) ? 'checked' : '' %>
                      >
                      <label class="form-check-label" for="material-<%= material.replace(/\s+/g, '-').toLowerCase() %>">
                        <%= material %>
                      </label>
                    </div>
                  <% }) %>
                <% } else { %>
                  <p class="text-muted small">No materials available</p>
                <% } %>
              </div>
            </div>
            
            <!-- Finish Filter -->
            <div class="filter-group">
              <h5 class="fs-6 fw-semibold">Finish</h5>
              <div class="overflow-auto" style="max-height: 200px;">
                <% if (finishes && finishes.length > 0) { %>
                  <% finishes.forEach(finish => { %>
                    <div class="form-check">
                      <input 
                        class="form-check-input" 
                        type="checkbox" 
                        id="finish-<%= finish.replace(/\s+/g, '-').toLowerCase() %>" 
                        name="finish" 
                        value="<%= finish %>"
                        <%= activeFilters && activeFilters.finish && activeFilters.finish.includes(finish) ? 'checked' : '' %>
                      >
                      <label class="form-check-label" for="finish-<%= finish.replace(/\s+/g, '-').toLowerCase() %>">
                        <%= finish %>
                      </label>
                    </div>
                  <% }) %>
                <% } else { %>
                  <p class="text-muted small">No finishes available</p>
                <% } %>
              </div>
            </div>
            
            <button class="btn btn-primary w-100 mt-3" id="applyFilters">Apply Filters</button>
          </div>
        </div>
      </div>
      
      <!-- Product Grid -->
      <div class="col-lg-9">
        <div class="d-flex justify-content-between align-items-center mb-4 flex-wrap">
          <h2 class="fs-4 fw-bold mb-0">All Products <% if (totalProducts) { %><span class="text-muted fs-6">(<%= totalProducts %> items)</span><% } %></h2>
          
          <div class="d-flex align-items-center mt-2 mt-md-0">
            <label for="sortOrder" class="me-2">Sort By:</label>
            <select class="form-select form-select-sm" id="sortOrder">
              <option value="featured" <%= sortBy === 'featured' ? 'selected' : '' %>>Featured</option>
              <option value="price_asc" <%= sortBy === 'price_asc' ? 'selected' : '' %>>Price: Low to High</option>
              <option value="price_desc" <%= sortBy === 'price_desc' ? 'selected' : '' %>>Price: High to Low</option>
              <option value="newest" <%= sortBy === 'newest' ? 'selected' : '' %>>Newest</option>
              <option value="name_asc" <%= sortBy === 'name_asc' ? 'selected' : '' %>>Name: A to Z</option>
              <option value="name_desc" <%= sortBy === 'name_desc' ? 'selected' : '' %>>Name: Z to A</option>
            </select>
          </div>
        </div>
        
        <% if (products && products.length > 0) { %>
          <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-4">
            <% products.forEach(product => { %>
              <div class="col">
                <div class="product-card">
                  <div class="product-img-container">
                    <% if (product.offer > 0) { %>
                      <div class="product-discount">-<%= product.offer %>%</div>
                    <% } %>
                    <img 
                      src="<%= product.mainImage ? /uploads/products/${product.mainImage} : '/images/placeholder.jpg' %>" 
                      alt="<%= product.name %>" 
                      class="product-img"
                      onerror="this.onerror=null; this.src='/images/placeholder.jpg';"
                    >
                  </div>
                  <div class="product-info">
                    <h3 class="product-title"><%= product.name %></h3>
                    <p class="product-brand"><%= product.brand %></p>
                    
                    <div class="product-specs">
                      <% if (product.specifications && product.specifications.boltPattern) { %>
                        <span><i class="bi bi-circle"></i> <%= product.specifications.boltPattern %></span>
                      <% } %>
                      <% if (product.sizes && product.sizes.length > 0) { %>
                        <span><i class="bi bi-arrows-angle-expand"></i> <%= product.sizes[0] %><%= product.sizes.length > 1 ? '+' : '' %></span>
                      <% } %>
                      <% if (product.specifications && product.specifications.color) { %>
                        <span><i class="bi bi-palette"></i> <%= product.specifications.color %></span>
                      <% } %>
                    </div>
                    
                    <div class="stock-status">
                      <% if (product.stock > 10) { %>
                        <span class="in-stock"><i class="bi bi-check-circle"></i> In Stock</span>
                      <% } else if (product.stock > 0) { %>
                        <span class="low-stock"><i class="bi bi-exclamation-circle"></i> Low Stock (<%= product.stock %> left)</span>
                      <% } else { %>
                        <span class="out-of-stock"><i class="bi bi-x-circle"></i> Out of Stock</span>
                      <% } %>
                    </div>
                    
                    <div class="d-flex align-items-center">
                      <% if (product.offer > 0) { %>
                        <% const discountedPrice = product.price - (product.price * (product.offer / 100)); %>
                        <span class="product-price">$<%= discountedPrice.toFixed(2) %></span>
                        <span class="product-original-price">$<%= product.price.toFixed(2) %></span>
                      <% } else { %>
                        <span class="product-price">$<%= product.price.toFixed(2) %></span>
                      <% } %>
                    </div>
                    
                    <div class="product-actions">
                      <a href="/product/<%= product._id %>" class="btn btn-sm btn-outline-primary">View Details</a>
                      <% if (product.stock > 0) { %>
                        <button class="btn btn-sm btn-primary add-to-cart" data-product-id="<%= product._id %>">
                          <i class="bi bi-cart-plus"></i> Add to Cart
                        </button>
                      <% } else { %>
                        <button class="btn btn-sm btn-secondary" disabled>
                          <i class="bi bi-cart-x"></i> Out of Stock
                        </button>
                      <% } %>
                    </div>
                  </div>
                </div>
              </div>
            <% }) %>
          </div>
          
          <!-- Pagination -->
          <% if (totalPages > 1) { %>
            <nav aria-label="Product pagination" class="mt-4">
              <ul class="pagination justify-content-center">
                <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                  <a class="page-link" href="<%= paginationUrl(currentPage - 1) %>" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                  </a>
                </li>
                
                <% 
                  let startPage = Math.max(1, currentPage - 2);
                  let endPage = Math.min(totalPages, startPage + 4);
                  
                  if (endPage - startPage < 4) {
                    startPage = Math.max(1, endPage - 4);
                  }
                %>
                
                <% if (startPage > 1) { %>
                  <li class="page-item">
                    <a class="page-link" href="<%= paginationUrl(1) %>">1</a>
                  </li>
                  <% if (startPage > 2) { %>
                    <li class="page-item disabled">
                      <span class="page-link">...</span>
                    </li>
                  <% } %>
                <% } %>
                
                <% for (let i = startPage; i <= endPage; i++) { %>
                  <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                    <a class="page-link" href="<%= paginationUrl(i) %>"><%= i %></a>
                  </li>
                <% } %>
                
                <% if (endPage < totalPages) { %>
                  <% if (endPage < totalPages - 1) { %>
                    <li class="page-item disabled">
                      <span class="page-link">...</span>
                    </li>
                  <% } %>
                  <li class="page-item">
                    <a class="page-link" href="<%= paginationUrl(totalPages) %>"><%= totalPages %></a>
                  </li>
                <% } %>
                
                <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                  <a class="page-link" href="<%= paginationUrl(currentPage + 1) %>" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                  </a>
                </li>
              </ul>
            </nav>
          <% } %>
        <% } else { %>
          <div class="alert alert-info">
            <i class="bi bi-info-circle"></i> No products found matching your criteria. Try adjusting your filters.
          </div>
        <% } %>
      </div>
    </div>
  </div>

  <!-- Footer would be included here -->

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Mobile filter toggle
      const filterToggle = document.querySelector('.filter-toggle');
      const filterContent = document.querySelector('.filter-content');
      
      if (filterToggle) {
        filterToggle.addEventListener('click', function() {
          filterContent.classList.toggle('show');
        });
      }
      
      // Price range slider
      const priceRangeSlider = document.getElementById('priceRangeSlider');
      const minPriceInput = document.getElementById('minPrice');
      const maxPriceInput = document.getElementById('maxPrice');
      
      if (priceRangeSlider) {
        priceRangeSlider.addEventListener('input', function() {
          maxPriceInput.value = this.value;
        });
        
        minPriceInput.addEventListener('input', function() {
          if (parseInt(this.value) > parseInt(maxPriceInput.value)) {
            this.value = maxPriceInput.value;
          }
        });
        
        maxPriceInput.addEventListener('input', function() {
          if (parseInt(this.value) < parseInt(minPriceInput.value)) {
            this.value = minPriceInput.value;
          }
          priceRangeSlider.value = this.value;
        });
      }
      
      // Apply price filter
      const applyPriceFilterBtn = document.getElementById('applyPriceFilter');
      if (applyPriceFilterBtn) {
        applyPriceFilterBtn.addEventListener('click', function() {
          const minPrice = minPriceInput.value;
          const maxPrice = maxPriceInput.value;
          
          const currentUrl = new URL(window.location.href);
          currentUrl.searchParams.set('minPrice', minPrice);
          currentUrl.searchParams.set('maxPrice', maxPrice);
          currentUrl.searchParams.set('page', '1'); // Reset to page 1 when applying filters
          window.location.href = currentUrl.toString();
        });
      }
      
      // Brand search filter
      const brandSearch = document.getElementById('brandSearch');
      const brandItems = document.querySelectorAll('.brand-item');
      
      if (brandSearch) {
        brandSearch.addEventListener('input', function() {
          const searchTerm = this.value.toLowerCase();
          
          brandItems.forEach(item => {
            const brandName = item.querySelector('label').textContent.trim().toLowerCase();
            if (brandName.includes(searchTerm)) {
              item.style.display = '';
            } else {
              item.style.display = 'none';
            }
          });
        });
      }
      
      // Apply all filters
      const applyFiltersBtn = document.getElementById('applyFilters');
      if (applyFiltersBtn) {
        applyFiltersBtn.addEventListener('click', function() {
          const form = document.createElement('form');
          form.method = 'GET';
          form.action = window.location.pathname;
          
          // Get all checked checkboxes
          const checkedInputs = document.querySelectorAll('.filter-content input[type="checkbox"]:checked');
          checkedInputs.forEach(input => {
            const hiddenField = document.createElement('input');
            hiddenField.type = 'hidden';
            hiddenField.name = input.name;
            hiddenField.value = input.value;
            form.appendChild(hiddenField);
          });
          
          // Add price range
          const minPrice = document.getElementById('minPrice').value;
          const maxPrice = document.getElementById('maxPrice').value;
          
          const minPriceField = document.createElement('input');
          minPriceField.type = 'hidden';
          minPriceField.name = 'minPrice';
          minPriceField.value = minPrice;
          form.appendChild(minPriceField);
          
          const maxPriceField = document.createElement('input');
          maxPriceField.type = 'hidden';
          maxPriceField.name = 'maxPrice';
          maxPriceField.value = maxPrice;
          form.appendChild(maxPriceField);
          
          // Add sort order
          const sortOrder = document.getElementById('sortOrder').value;
          const sortField = document.createElement('input');
          sortField.type = 'hidden';
          sortField.name = 'sort';
          sortField.value = sortOrder;
          form.appendChild(sortField);
          
          // Reset to page 1
          const pageField = document.createElement('input');
          pageField.type = 'hidden';
          pageField.name = 'page';
          pageField.value = '1';
          form.appendChild(pageField);
          
          document.body.appendChild(form);
          form.submit();
        });
      }
      
      // Sort order change
      const sortOrder = document.getElementById('sortOrder');
      if (sortOrder) {
        sortOrder.addEventListener('change', function() {
          const currentUrl = new URL(window.location.href);
          currentUrl.searchParams.set('sort', this.value);
          window.location.href = currentUrl.toString();
        });
      }
      
      // Remove individual filter
      const filterCloseButtons = document.querySelectorAll('.active-filter .close');
      filterCloseButtons.forEach(button => {
        button.addEventListener('click', function() {
          const filter = this.dataset.filter;
          const value = this.dataset.value;
          const currentUrl = new URL(window.location.href);
          
          if (filter === 'priceRange') {
            currentUrl.searchParams.delete('minPrice');
            currentUrl.searchParams.delete('maxPrice');
          } else if (value) {
            // Remove specific value from multi-value filter
            const values = currentUrl.searchParams.getAll(filter);
            currentUrl.searchParams.delete(filter);
            values.forEach(val => {
              if (val !== value) {
                currentUrl.searchParams.append(filter, val);
              }
            });
          } else {
            // Remove entire filter
            currentUrl.searchParams.delete(filter);
          }
          
          // Reset to page 1 when removing filters
          currentUrl.searchParams.set('page', '1');
          window.location.href = currentUrl.toString();
        });
      });
      
      // Clear all filters
      const clearAllFiltersBtn = document.getElementById('clearAllFilters');
      if (clearAllFiltersBtn) {
        clearAllFiltersBtn.addEventListener('click', function() {
          const currentUrl = new URL(window.location.href);
          const sort = currentUrl.searchParams.get('sort');
          
          // Clear all search params
          currentUrl.search = '';
          
          // Keep sort parameter if it exists
          if (sort) {
            currentUrl.searchParams.set('sort', sort);
          }
          
          // Reset to page 1
          currentUrl.searchParams.set('page', '1');
          
          window.location.href = currentUrl.toString();
        });
      }
      
      // Add to cart functionality
      const addToCartButtons = document.querySelectorAll('.add-to-cart');
      addToCartButtons.forEach(button => {
        button.addEventListener('click', function() {
          const productId = this.dataset.productId;
          
          // Add loading state
          this.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Adding...';
          this.disabled = true;
          
          fetch('/cart/add', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              productId: productId,
              quantity: 1
            })
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              // Show success message
              this.innerHTML = '<i class="bi bi-check"></i> Added';
              this.classList.remove('btn-primary');
              this.classList.add('btn-success');
              
              // Update cart count in header if available
              const cartCountElement = document.querySelector('.cart-count');
              if (cartCountElement) {
                cartCountElement.textContent = data.cartCount || '0';
              }
              
              // Reset button after delay
              setTimeout(() => {
                this.innerHTML = '<i class="bi bi-cart-plus"></i> Add to Cart';
                this.classList.remove('btn-success');
                this.classList.add('btn-primary');
                this.disabled = false;
              }, 2000);
            } else {
              // Show error
              this.innerHTML = '<i class="bi bi-exclamation-triangle"></i> Error';
              this.classList.remove('btn-primary');
              this.classList.add('btn-danger');
              
              setTimeout(() => {
                this.innerHTML = '<i class="bi bi-cart-plus"></i> Add to Cart';
                this.classList.remove('btn-danger');
                this.classList.add('btn-primary');
                this.disabled = false;
              }, 2000);
            }
          })
          .catch(error => {
            console.error('Error:', error);
            this.innerHTML = '<i class="bi bi-exclamation-triangle"></i> Error';
            this.classList.remove('btn-primary');
            this.classList.add('btn-danger');
            
            setTimeout(() => {
              this.innerHTML = '<i class="bi bi-cart-plus"></i> Add to Cart';
              this.classList.remove('btn-danger');
              this.classList.add('btn-primary');
              this.disabled = false;
            }, 2000);
          });
        });
      });
    });
  </script>
</body>
</html>