<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My Orders - StarForge</title>
  <link rel="stylesheet" href="/css/user/userProfile.css">
</head>
<body>
  <nav class="top-navbar">
    <a href="/" class="navbar-brand">StarForge.</a>
    <div class="navbar-user">
      <span>Welcome back, <%= user.fullName %></span>
    </div>
  </nav>

  <%- include('../partials/user/profileSidebar', { user, currentPage: 'orders' }) %>

  <main class="main-content">
    <div class="content-wrapper">
      <div class="profile-container">
        <header class="page-header">
          <div>
            <h1 class="page-title">My Orders</h1>
            <div class="breadcrumb">
              <a href="/">Home</a> / My Orders
            </div>
          </div>
        </header>

        <% if (orders && orders.length > 0) { %>
          <table class="table table-bordered">
            <thead>
              <tr>
                <th>Products</th>
                <th>Order ID</th>
                <th>Placed On</th>
                <th>Status</th>
                <th>Total</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <% orders.forEach(order => { %>
                <tr>
                  <td>
                    <ul>
                      <% order.items.forEach(item => { %>
                        <li>
                          <%= item.productId?.name || 'Not Available' %> × <%= item.quantity %>
                          <span class="orderStatus <%= item.status ? item.status.toLowerCase().replace(' ', '-') : 'unknown' %>">
                            <%= item.status || 'Unknown' %>
                          </span>
                          <% if (item.status === "Ordered") { %>
                            <button class="btn btn-sm btn-danger cancel-item" data-order-id="<%= order._id %>" data-product-id="<%= item.productId?._id || '' %>">Cancel</button>
                          <% } %>
                          <% if (item.status === "Delivered") { %>
                            <button class="btn btn-sm btn-warning request-return-item" data-order-id="<%= order._id %>" data-product-id="<%= item.productId?._id || '' %>">Request Return</button>
                          <% } %>
                        </li>
                      <% }); %>
                    </ul>
                  </td>
                  <td><%= order._id %></td>
                  <td><%= order.createdAt.toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: 'numeric' }) %></td>
                  <td>
                    <span class="orderStatus <%= order.status ? order.status.toLowerCase().replace(' ', '-') : 'unknown' %>">
                      <%= order.status || 'Unknown' %>
                    </span>
                  </td>
                  <td>₹<%= order.totalAmount || 'N/A' %></td>
                  <td>
                    <% if (order.status === "Processing" || order.status === "Confirmed") { %>
                      <button class="btn btn-sm btn-danger cancel-order" data-order-id="<%= order._id %>">Cancel</button>
                    <% } %>
                    <% if (order.status === "Delivered") { %>
                      <button class="btn btn-sm btn-warning request-return" data-order-id="<%= order._id %>">Request Return</button>
                    <% } %>
                    <a href="/order/<%= order._id %>" class="btn btn-sm btn-primary">View</a>
                  </td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        <% } else { %>
          <div class="no-orders">
            <h3>You have no orders yet</h3>
            <p>Explore our products and place your first order!</p>
            <a href="/products" class="btn btn-primary">Start Shopping</a>
          </div>
        <% } %>
      </div>
    </div>
  </main>

  <div class="modal-overlay" id="returnModal">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Request Return</h5>
        <button type="button" class="btn-close" onclick="closeReturnModal()"></button>
      </div>
      <form id="returnForm">
        <div class="modal-body">
          <div class="form-group">
            <label for="returnReason">Reason for Return</label>
            <textarea class="form-control" id="returnReason" name="reason" rows="4" required></textarea>
            <div class="invalid-feedback">Please provide a reason for the return.</div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" onclick="closeReturnModal()">Cancel</button>
          <button type="submit" class="btn btn-primary" id="submitReturnBtn">Submit Return</button>
        </div>
      </form>
    </div>
  </div>

  <script>
  document.addEventListener("DOMContentLoaded", () => {

    document.querySelectorAll('.cancelItemBtn').forEach(button => {
      button.addEventListener('click', async () => {
        const orderId = button.dataset.orderId;
        const productId = button.dataset.productId;
        if (confirm('Cancel this item?')) {
          const res = await fetch(`/cancelItem/${orderId}/${productId}`, { method: 'POST' });
          const result = await res.json();
          alert(result.message || result.error);
          location.reload();
        }
      });
    });

    let currentOrderId, currentProductId;
    document.querySelectorAll('.returnItemBtn').forEach(button => {
      button.addEventListener('click', () => {
        currentOrderId = button.dataset.orderId;
        currentProductId = button.dataset.productId;
        returnModal.classList.add('show');
        returnModal.classList.remove('hidden');
      });
    });

    document.getElementById('returnForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const reason = document.getElementById('returnReason').value.trim();
      if (!reason) {
        document.getElementById('returnReason').classList.add('is-invalid');
        return;
      }

      const res = await fetch(`/returnItem/${currentOrderId}/${currentProductId}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ reason })
      });
      const result = await res.json();
      alert(result.message || result.error);
      closeReturnModal();
      location.reload();
    });

    const returnModal = document.getElementById('returnModal');
    let currentOrderId;

    document.querySelectorAll('.returnOrderBtn').forEach(button => {
      button.addEventListener('click', () => {
        currentOrderId = button.dataset.orderId;
        returnModal.classList.add('show');
        returnModal.classList.remove('hidden');
      });
    });

    window.closeReturnModal = function () {
      returnModal.classList.add('hidden');
      returnModal.classList.remove('show');
      document.getElementById('returnForm').reset();
      document.getElementById('returnReason').classList.remove('is-invalid');
    }

    document.getElementById('returnForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const reason = document.getElementById('returnReason').value.trim();
      if (!reason) {
        document.getElementById('returnReason').classList.add('is-invalid');
        return;
      }

      try {
        const response = await fetch(`/return/${currentOrderId}`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ reason }),
        });
        const result = await response.json();
        if (result.message) {
          alert(result.message);
          closeReturnModal();
          location.reload();
        } else {
          alert(result.error || 'Error submitting return request');
        }
      } catch (error) {
        alert('Error submitting return request');
      }
    });

  });
  </script>
</body>
</html>