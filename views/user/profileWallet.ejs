<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My Wallet - StarForge</title>
  <link rel="stylesheet" href="/css/user/profileDashboard.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    .wallet-balance-card {
      background:#fca120;
      border-radius: 16px;
      padding: 2rem;
      margin-bottom: 2rem;
      color: white;
      position: relative;
      overflow: hidden;
      box-shadow: 0 8px 32px rgba(252, 161, 32, 0.3);
    }

    .wallet-balance-card::before {
      content: '';
      position: absolute;
      top: -50%;
      right: -20%;
      width: 200px;
      height: 200px;
      background: rgba(255, 255, 255, 0.1);
      border-radius: 50%;
      transform: rotate(45deg);
    }

    .balance-content {
      position: relative;
      z-index: 2;
    }

    .balance-label {
      font-size: 1rem;
      opacity: 0.9;
      margin-bottom: 0.5rem;
      font-weight: 500;
    }

    .balance-amount {
      font-size: 3rem;
      font-weight: 700;
      margin-bottom: 1rem;
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .balance-info {
      font-size: 0.9rem;
      opacity: 0.8;
    }

    .add-money-section {
      background: white;
      border-radius: 16px;
      padding: 2rem;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
      margin-bottom: 2rem;
      border: 1px solid #e5e7eb;
    }

    .add-money-section h3 {
      font-size: 1.5rem;
      font-weight: 600;
      color: #222;
      margin-bottom: 1.5rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .add-money-section h3 i {
      color: #fca120;
    }

    .add-money-form {
      display: flex;
      gap: 1rem;
      align-items: flex-end;
      flex-wrap: wrap;
    }

    .form-group {
      flex: 1;
      min-width: 200px;
    }

    .form-label {
      display: block;
      font-weight: 600;
      color: #374151;
      margin-bottom: 0.5rem;
      font-size: 0.9rem;
    }

    .amount-input {
      width: 100%;
      padding: 0.875rem 1rem;
      border: 2px solid #e5e7eb;
      border-radius: 10px;
      font-size: 1.1rem;
      font-weight: 600;
      transition: all 0.3s ease;
      background: #fafbfc;
    }

    .amount-input:focus {
      outline: none;
      border-color: #fca120;
      box-shadow: 0 0 0 3px rgba(252, 161, 32, 0.1);
      background: white;
    }

    .add-money-btn {
      background: linear-gradient(135deg, #fca120 0%, #e8940f 100%);
      color: white;
      border: none;
      padding: 0.875rem 2rem;
      border-radius: 10px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      font-size: 1rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      box-shadow: 0 4px 16px rgba(252, 161, 32, 0.3);
      white-space: nowrap;
    }

    .add-money-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 24px rgba(252, 161, 32, 0.4);
    }

    .add-money-btn:disabled {
      opacity: 0.6;
      cursor: not-allowed;
      transform: none;
    }

    .transaction-history {
      background: white;
      border-radius: 16px;
      overflow: hidden;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
      border: 1px solid #e5e7eb;
    }

    .transaction-table {
      width: 100%;
      border-collapse: collapse;
      margin: 0;
    }

    .transaction-table thead {
      background: linear-gradient(135deg, #fca120 0%, #e8940f 100%);
      color: white;
    }

    .transaction-table th {
      padding: 1.25rem 1rem;
      text-align: left;
      font-weight: 600;
      font-size: 0.9rem;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      border: none;
    }

    .transaction-table td {
      padding: 1.25rem 1rem;
      border-bottom: 1px solid #f3f4f6;
      vertical-align: middle;
      font-size: 0.95rem;
    }

    .transaction-table tbody tr {
      transition: all 0.3s ease;
    }

    .transaction-table tbody tr:hover {
      background: #fafbfc;
    }

    .transaction-table tbody tr:last-child td {
      border-bottom: none;
    }

    .date-time {
      display: flex;
      flex-direction: column;
      gap: 0.25rem;
    }

    .date {
      font-weight: 600;
      color: #222;
      font-size: 0.9rem;
    }

    .time {
      font-size: 0.8rem;
      color: #6b7280;
    }

    .description-text {
      font-size: 0.95rem;
      color: #374151;
      line-height: 1.4;
      font-weight: 500;
    }

    .transaction-badge {
      display: inline-flex;
      align-items: center;
      gap: 0.375rem;
      padding: 0.5rem 0.875rem;
      border-radius: 20px;
      font-size: 0.8rem;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .transaction-badge.credit {
      background: #dcfce7;
      color: #166534;
      border: 1px solid #bbf7d0;
    }

    .transaction-badge.debit {
      background: #fee2e2;
      color: #991b1b;
      border: 1px solid #fecaca;
    }

    .transaction-badge i {
      font-size: 0.75rem;
    }

    .amount {
      font-weight: 700;
      font-size: 1.1rem;
    }

    .amount.credit {
      color: #059669;
    }

    .amount.debit {
      color: #dc2626;
    }

    .empty-state {
      text-align: center;
      padding: 4rem 2rem;
      background: white;
      border-radius: 16px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
      border: 2px dashed #e5e7eb;
    }

    .empty-icon {
      font-size: 4rem;
      color: #d1d5db;
      margin-bottom: 1.5rem;
    }

    .empty-title {
      color: #374151;
      margin-bottom: 1rem;
      font-size: 1.5rem;
      font-weight: 600;
    }

    .empty-description {
      color: #6b7280;
      margin-bottom: 2rem;
      font-size: 1rem;
      line-height: 1.6;
      max-width: 400px;
      margin-left: auto;
      margin-right: auto;
    }

    .empty-action-btn {
      background: linear-gradient(135deg, #fca120 0%, #e8940f 100%);
      color: white;
      border: none;
      padding: 1rem 2rem;
      border-radius: 10px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      font-size: 1rem;
      box-shadow: 0 4px 16px rgba(252, 161, 32, 0.3);
    }

    .empty-action-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 24px rgba(252, 161, 32, 0.4);
      color: white;
      text-decoration: none;
    }

    @media (max-width: 768px) {
      .wallet-balance-card {
        padding: 1.5rem;
        text-align: center;
      }

      .balance-amount {
        font-size: 2.5rem;
      }

      .add-money-form {
        flex-direction: column;
        align-items: stretch;
      }

      .form-group {
        min-width: auto;
      }

      .add-money-btn {
        justify-content: center;
      }

      .transaction-table {
        display: block;
        overflow-x: auto;
        white-space: nowrap;
        -webkit-overflow-scrolling: touch;
      }

      .transaction-table thead {
        display: none;
      }

      .transaction-table tbody,
      .transaction-table tr,
      .transaction-table td {
        display: block;
        width: 100%;
      }

      .transaction-table tbody tr {
        margin-bottom: 1.5rem;
        padding: 1.5rem;
        border: 1px solid #e5e7eb;
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
        background: white;
      }

      .transaction-table tbody td {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        padding: 0.75rem 0;
        border-bottom: 1px solid #f3f4f6;
        text-align: left;
        position: relative;
        min-height: auto;
        font-size: 0.9rem;
      }

      .transaction-table tbody td:last-child {
        border-bottom: none;
      }

      .transaction-table tbody td::before {
        content: attr(data-label);
        font-weight: 600;
        color: #374151;
        text-transform: uppercase;
        font-size: 0.8rem;
        letter-spacing: 0.5px;
        width: 40%;
        flex-shrink: 0;
      }

      .transaction-table tbody td:nth-child(1)::before {
        content: "Date & Time";
      }

      .transaction-table tbody td:nth-child(2)::before {
        content: "Description";
      }

      .transaction-table tbody td:nth-child(3)::before {
        content: "Type";
      }

      .transaction-table tbody td:nth-child(4)::before {
        content: "Amount";
      }
    }

    @media (max-width: 576px) {
      .wallet-balance-card {
        padding: 1rem;
      }

      .balance-amount {
        font-size: 2rem;
      }

      .add-money-section {
        padding: 1.5rem;
      }

      .transaction-table tbody tr {
        padding: 1rem;
      }

      .transaction-table tbody td {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;
      }

      .transaction-table tbody td::before {
        width: 100%;
        margin-bottom: 0.25rem;
      }

      .empty-state {
        padding: 3rem 1.5rem;
      }
    }
  </style>
</head>
<body>
  <%- include('../partials/user/profileNavbar', { user, cartCount: cartCount || 0 }) %>

  <%- include('../partials/user/profileSidebar', { user, currentPage: 'wallet' }) %>

  <main class="main-content">
    <div class="content-wrapper">
      <div class="profile-container">
        <header class="page-header">
          <div>
            <h1 class="page-title">My Wallet</h1>
            <div class="breadcrumb">
              <a href="/">Home</a> / My Wallet
            </div>
          </div>
        </header>
        
        <div class="wallet-balance-card">
          <div class="balance-content">
            <div class="balance-label">Current Wallet Balance</div>
            <div class="balance-amount">₹<%= user.walletBalance.toFixed(2) %></div>
            <div class="balance-info">Available for purchases and transactions</div>
          </div>
        </div>

        <div class="add-money-section">
          <h3>
            <i class="fas fa-plus-circle"></i>
            Add Money to Wallet
          </h3>
          <form id="wallet-form" class="add-money-form">
            <div class="form-group">
              <label for="amount" class="form-label">Amount (₹)</label>
              <input type="number" name="amount" id="amount" class="amount-input" placeholder="Enter amount (min ₹500)" required min="500" step="1">
            </div>
            <button type="submit" id="wallet-submit" class="add-money-btn">
              <i class="fas fa-wallet"></i>
              Add Money
            </button>
          </form>
        </div>

        <div class="section-header">
          <h2 class="section-title">
            <i class="fas fa-history"></i>
            Transaction History
          </h2>
        </div>

        <% if (walletHistory && walletHistory.length > 0) { %>
          <div class="wallet-transactions">
            <table class="userTable orderTable wallet-table">
              <thead>
                <tr>
                  <th>Date & Time</th>
                  <th>Transaction Details</th>
                  <th>Type</th>
                  <th>Amount</th>
                </tr>
              </thead>
              <tbody>
                <% walletHistory.forEach(transaction => { %>
                  <tr class="transaction-row">
                    <td class="transaction-date">
                      <div class="date-time">
                        <div class="date">
                          <%= transaction.date.toLocaleDateString('en-GB', { 
                            day: '2-digit', 
                            month: 'short', 
                            year: 'numeric' 
                          }) %>
                        </div>
                        <div class="time">
                          <%= transaction.date.toLocaleTimeString('en-GB', { 
                            hour: '2-digit', 
                            minute: '2-digit' 
                          }) %>
                        </div>
                      </div>
                    </td>
                    <td class="transaction-description">
                      <div class="description-text">
                        <%= transaction.description %>
                      </div>
                    </td>
                    <td class="transaction-type">
                      <span class="transaction-badge <%= transaction.type.toLowerCase() %>">
                        <i class="<%= transaction.type === 'credit' ? 'fas fa-plus' : 'fas fa-minus' %>"></i>
                        <%= transaction.type.charAt(0).toUpperCase() + transaction.type.slice(1) %>
                      </span>
                    </td>
                    <td class="transaction-amount">
                      <span class="amount <%= transaction.type.toLowerCase() %>">
                        <%= transaction.type === 'credit' ? '+' : '-' %>₹<%= transaction.amount.toFixed(2) %>
                      </span>
                    </td>
                  </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
        <% } else { %>
          <div class="empty-state">
            <div class="empty-icon">
              <i class="fas fa-wallet" style="font-size: 4rem; color: #ddd;"></i>
            </div>
            <h3 class="empty-title">No Transactions Yet</h3>
            <p class="empty-description">Your wallet transaction history will appear here once you make transactions.</p>
            <a href="/" class="btn-primary">Start Shopping</a>
          </div>
        <% } %>
      </div>
    </div>
  </main>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script>
  document.getElementById("wallet-form").addEventListener("submit", async function (e) {
  e.preventDefault();

  const submitButton = document.getElementById("wallet-submit");
  const amountInput = document.getElementById("amount");
  const amount = parseFloat(amountInput.value);

  if (!amount || amount <= 0) {
    Swal.fire({
      icon: 'error',
      title: 'Invalid Amount',
      text: 'Enter valid amount',
      confirmButtonText: 'OK',
      confirmButtonColor: '#d33'
    });
    return;
  }

  if (submitButton) {
    submitButton.disabled = true;
    submitButton.textContent = 'Processing...';
  }

  try {
    const res = await fetch("/wallet/create-order", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ amount }),
    });

    const data = await res.json();
    if (!data.success) {
      Swal.fire({
        icon: 'error',
        title: 'Payment Failed',
        text: data.error || "Failed to initiate payment",
        confirmButtonText: 'OK',
        confirmButtonColor: '#d33'
      });
      if (submitButton) {
        submitButton.disabled = false;
        submitButton.textContent = "Add Money";
      }
      return;
    }

    if (typeof Razorpay === 'undefined') {
      Swal.fire({
        icon: 'error',
        title: 'System Error',
        text: "Payment system is not loaded. Please refresh the page and try again.",
        confirmButtonText: 'OK',
        confirmButtonColor: '#d33'
      });
      if (submitButton) {
        submitButton.disabled = false;
        submitButton.textContent = "Add Money";
      }
      return;
    }

    const options = {
      key: data.key || window.RAZORPAY_KEY,
      amount: data.amount,
      currency: "INR",
      name: "StarForge Wallet",
      description: "Wallet Top-up",
      order_id: data.orderId,
      handler: async function (response) {
        await fetch("/wallet/verify", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            razorpay_payment_id: response.razorpay_payment_id,
            razorpay_order_id: response.razorpay_order_id,
            razorpay_signature: response.razorpay_signature,
            amount,
          }),
        });

        Swal.fire({
          icon: 'success',
          title: 'Success!',
          text: 'Wallet credited successfully!',
          timer: 2000,
          timerProgressBar: true,
          showConfirmButton: false,
          confirmButtonColor: '#28a745'
        });
        window.location.reload();
      },
      prefill: {
        name: window.USER_NAME || "Customer",
        email: window.USER_EMAIL || "",
      },
      theme: { color: "#28a745" },
      modal: {
        ondismiss: function () {
          if (submitButton) {
            submitButton.disabled = false;
            submitButton.textContent = "Add Money";
          }
        }
      }
    };

    const rzp = new Razorpay(options);
    rzp.open();

  } catch (error) {
    console.error("Wallet Razorpay error:", error);
    Swal.fire({
      icon: 'error',
      title: 'Payment Error',
      text: 'Something went wrong while processing payment.',
      confirmButtonText: 'OK',
      confirmButtonColor: '#d33'
    });
    if (submitButton) {
      submitButton.disabled = false;
      submitButton.textContent = "Add Money";
    }
  }
});

</script>
</body>
</html>