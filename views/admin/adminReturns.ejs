<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Return Requests - StarForge Admin</title>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&family=Inter:wght@600&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <link rel="stylesheet" href="/css/admin/orders.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    /* Return Cards Styling */
    .returns-container {
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
      margin-top: 1.5rem;
    }

    .return-card {
      background: white;
      border-radius: 12px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      border: 1px solid #e5e7eb;
      overflow: hidden;
      transition: all 0.3s ease;
    }

    .return-card:hover {
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
      transform: translateY(-2px);
    }

    .full-order-return {
      border-left: 4px solid #dc3545;
    }

    .item-return {
      border-left: 4px solid #fca120;
    }

    .return-header {
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
      padding: 1.5rem;
      background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
      border-bottom: 1px solid #e5e7eb;
    }

    .return-info h3 {
      margin: 0 0 1rem 0;
      color: #1f2937;
      font-size: 1.2rem;
      font-weight: 600;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .return-meta {
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
      font-size: 0.9rem;
      color: #6b7280;
    }

    .return-meta span {
      display: flex;
      align-items: center;
      gap: 0.4rem;
      background: rgba(252, 161, 32, 0.1);
      padding: 0.4rem 0.8rem;
      border-radius: 20px;
      border: 1px solid rgba(252, 161, 32, 0.2);
    }

    .return-meta i {
      color: #fca120;
      font-size: 0.8rem;
    }

    .return-actions {
      display: flex;
      gap: 0.75rem;
      align-items: flex-start;
    }

    .action-btn {
      padding: 0.6rem 1.2rem;
      border: none;
      border-radius: 8px;
      font-size: 0.9rem;
      font-weight: 600;
      cursor: pointer;
      text-decoration: none;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      transition: all 0.3s ease;
      white-space: nowrap;
    }

    .accept-btn {
      background: #10b981;
      color: white;
      box-shadow: 0 2px 8px rgba(16, 185, 129, 0.3);
    }

    .accept-btn:hover {
      background: #059669;
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(16, 185, 129, 0.4);
    }

    .decline-btn {
      background: #ef4444;
      color: white;
      box-shadow: 0 2px 8px rgba(239, 68, 68, 0.3);
    }

    .decline-btn:hover {
      background: #dc2626;
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(239, 68, 68, 0.4);
    }

    .view-btn {
      background: #3b82f6;
      color: white;
      box-shadow: 0 2px 8px rgba(59, 130, 246, 0.3);
    }

    .view-btn:hover {
      background: #2563eb;
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(59, 130, 246, 0.4);
    }

    .return-details {
      padding: 1.5rem;
      background: #fafafa;
    }

    .return-reason-section {
      margin-bottom: 1rem;
    }

    .return-reason-section h4 {
      margin: 0 0 0.5rem 0;
      color: #374151;
      font-size: 1rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .return-reason-text {
      background: white;
      padding: 1rem;
      border-radius: 8px;
      border: 1px solid #e5e7eb;
      margin: 0;
      color: #4b5563;
      line-height: 1.5;
    }

    .product-info {
      display: flex;
      gap: 1rem;
      margin-bottom: 1rem;
      background: white;
      padding: 1rem;
      border-radius: 8px;
      border: 1px solid #e5e7eb;
    }

    .product-image {
      width: 80px;
      height: 80px;
      border-radius: 8px;
      overflow: hidden;
      flex-shrink: 0;
    }

    .product-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    .no-image {
      width: 100%;
      height: 100%;
      background: #f3f4f6;
      display: flex;
      align-items: center;
      justify-content: center;
      color: #9ca3af;
      font-size: 1.5rem;
    }

    .product-details h4 {
      margin: 0 0 0.5rem 0;
      color: #1f2937;
      font-size: 1.1rem;
    }

    .product-details p {
      margin: 0.25rem 0;
      color: #6b7280;
      font-size: 0.9rem;
    }

    .payment-info {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .payment-method {
      background: white;
      padding: 0.5rem 1rem;
      border-radius: 20px;
      border: 1px solid #e5e7eb;
      color: #4b5563;
      font-size: 0.9rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .empty-state {
      text-align: center;
      padding: 4rem 2rem;
      color: #6b7280;
    }

    .empty-state i {
      color: #d1d5db;
      margin-bottom: 1rem;
    }

    .empty-state h3 {
      margin: 1rem 0 0.5rem 0;
      color: #374151;
    }

    .empty-state p {
      margin-bottom: 2rem;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .return-header {
        flex-direction: column;
        gap: 1rem;
        align-items: stretch;
      }

      .return-actions {
        justify-content: center;
      }

      .return-meta {
        flex-direction: column;
        gap: 0.5rem;
      }

      .product-info {
        flex-direction: column;
        text-align: center;
      }

      .product-image {
        width: 120px;
        height: 120px;
        margin: 0 auto;
      }
    }
  </style>
</head>
<body>
  <%- include('../partials/admin/navbar') %>
  <%- include('../partials/admin/sidepanel', { active: 'orders' }) %>

  <div class="main-content" id="main-content">
    <div class="orders-section">
      <div class="orders-header">
        <h2>Return Requests</h2>
        <a href="/admin/orders" class="return-requests-btn">
          <i class="fas fa-arrow-left"></i>
          Back to Orders
        </a>
      </div>
      
      <form method="GET" action="/admin/returns" class="filter-bar">
        <input type="text" name="search" placeholder="Search by customer name or email..." value="<%= search || '' %>">
        
        <select name="sort">
          <option value="desc" <%= sort === 'desc' ? 'selected' : '' %>>Newest First</option>
          <option value="asc" <%= sort === 'asc' ? 'selected' : '' %>>Oldest First</option>
        </select>
        
        <button type="submit">Apply</button>
        <a href="/admin/returns" class="btn-clear">Clear</a>
      </form>

      <% if (orders && orders.length > 0) { %>
      <div class="returns-container">
        <% orders.forEach(order => { %>
          <% if (order.hasFullOrderReturn) { %>
            <div class="return-card full-order-return" data-order-id="<%= order._id %>">
              <div class="return-header">
                <div class="return-info">
                  <h3>
                    <i class="fas fa-undo"></i>
                    Full Order Return - #<%= order._id.toString().slice(-8) %>
                  </h3>
                  <div class="return-meta">
                    <span class="customer-name">
                      <i class="fas fa-user"></i>
                      <%= order.userId?.fullName || 'Unknown' %>
                    </span>
                    <span class="customer-email">
                      <i class="fas fa-envelope"></i>
                      <%= order.userId?.email || 'No email' %>
                    </span>
                    <span class="return-date">
                      <i class="fas fa-calendar"></i>
                      <%= order.returnRequestedAt.toLocaleDateString('en-GB', { 
                        day: '2-digit', 
                        month: 'short', 
                        year: 'numeric' 
                      }) %>
                    </span>
                    <span class="order-total">
                      <i class="fas fa-dollar-sign"></i>
                      $<%= order.totalAmount.toFixed(2) %>
                    </span>
                  </div>
                </div>
                <div class="return-actions">
                  <button 
                    class="action-btn accept-btn" 
                    onclick="acceptReturn('<%= order._id %>')"
                    title="Accept Full Order Return"
                  >
                    <i class="fas fa-check"></i>
                    Accept
                  </button>
                  <button 
                    class="action-btn decline-btn" 
                    onclick="declineReturn('<%= order._id %>')"
                    title="Decline Full Order Return"
                  >
                    <i class="fas fa-times"></i>
                    Decline
                  </button>
                  <a 
                    href="/admin/orders/<%= order._id %>" 
                    class="action-btn view-btn"
                    title="View Order Details"
                  >
                    <i class="fas fa-eye"></i>
                    View Details
                  </a>
                </div>
              </div>
              <div class="return-details">
                <div class="return-reason-section">
                  <h4><i class="fas fa-comment-alt"></i> Return Reason</h4>
                  <p class="return-reason-text"><%= order.returnReason %></p>
                </div>
                <div class="payment-info">
                  <span class="payment-method">
                    <i class="fas fa-credit-card"></i>
                    <% if (order.paymentMethod === 'Online') { %>
                      Razorpay
                    <% } else if (order.paymentMethod === 'COD') { %>
                      Cash on Delivery
                    <% } else if (order.paymentMethod === 'Wallet') { %>
                      Wallet
                    <% } else { %>
                      <%= order.paymentMethod %>
                    <% } %>
                  </span>
                </div>
              </div>
            </div>
          <% } %>

          <% if (order.hasItemReturns) { %>
            <% order.itemReturns.forEach(item => { %>
              <div class="return-card item-return" data-order-id="<%= order._id %>" data-item-id="<%= item._id %>">
                <div class="return-header">
                  <div class="return-info">
                    <h3>
                      <i class="fas fa-box"></i>
                      Item Return - Order #<%= order._id.toString().slice(-8) %>
                    </h3>
                    <div class="return-meta">
                      <span class="customer-name">
                        <i class="fas fa-user"></i>
                        <%= order.userId?.fullName || 'Unknown' %>
                      </span>
                      <span class="customer-email">
                        <i class="fas fa-envelope"></i>
                        <%= order.userId?.email || 'No email' %>
                      </span>
                      <span class="return-date">
                        <i class="fas fa-calendar"></i>
                        <%= (item.returnRequestedAt || order.updatedAt).toLocaleDateString('en-GB', { 
                          day: '2-digit', 
                          month: 'short', 
                          year: 'numeric' 
                        }) %>
                      </span>
                      <span class="item-total">
                        <i class="fas fa-dollar-sign"></i>
                        $<%= (item.salesPrice * item.quantity).toFixed(2) %>
                      </span>
                    </div>
                  </div>
                  <div class="return-actions">
                    <button 
                      class="action-btn accept-btn" 
                      onclick="acceptItemReturn('<%= order._id %>', '<%= item.productId._id %>')"
                      title="Accept Item Return"
                    >
                      <i class="fas fa-check"></i>
                      Accept
                    </button>
                    <button 
                      class="action-btn decline-btn" 
                      onclick="declineItemReturn('<%= order._id %>', '<%= item.productId._id %>')"
                      title="Decline Item Return"
                    >
                      <i class="fas fa-times"></i>
                      Decline
                    </button>
                    <a 
                      href="/admin/orders/<%= order._id %>" 
                      class="action-btn view-btn"
                      title="View Order Details"
                    >
                      <i class="fas fa-eye"></i>
                      View Details
                    </a>
                  </div>
                </div>
                <div class="return-details">
                  <div class="product-info">
                    <div class="product-image">
                      <% if (item.productId?.mainImage) { %>
                        <img src="<%= item.productId.mainImage %>" alt="<%= item.productId?.name || 'Product' %>">
                      <% } else { %>
                        <div class="no-image">
                          <i class="fas fa-image"></i>
                        </div>
                      <% } %>
                    </div>
                    <div class="product-details">
                      <h4><%= item.productId?.name || 'Unknown Product' %></h4>
                      <p>Quantity: <%= item.quantity %></p>
                      <p>Price: $<%= item.salesPrice.toFixed(2) %> each</p>
                    </div>
                  </div>
                  <div class="return-reason-section">
                    <h4><i class="fas fa-comment-alt"></i> Return Reason</h4>
                    <p class="return-reason-text"><%= item.returnReason || 'No reason provided' %></p>
                  </div>
                </div>
              </div>
            <% }); %>
          <% } %>
        <% }); %>
      </div>

      <% if (totalPages > 1) { %>
        <div class="pagination-container">
          <div class="pagination-info">
            Showing <%= ((currentPage - 1) * 10) + 1 %> to <%= Math.min(currentPage * 10, orders.length) %> of <%= orders.length %> return requests
          </div>
          <div class="pagination">
            <% if (currentPage > 1) { %>
              <a href="?page=<%= currentPage - 1 %>&search=<%= search || '' %>&sort=<%= sort || 'desc' %>" class="pagination-btn">
                ← Previous
              </a>
            <% } else { %>
              <span class="pagination-btn disabled">← Previous</span>
            <% } %>

            <% 
              let startPage = Math.max(1, currentPage - 2);
              let endPage = Math.min(totalPages, currentPage + 2);
              
              if (endPage - startPage < 4) {
                if (startPage === 1) {
                  endPage = Math.min(totalPages, startPage + 4);
                } else {
                  startPage = Math.max(1, endPage - 4);
                }
              }
            %>

            <% if (startPage > 1) { %>
              <a href="?page=1&search=<%= search || '' %>&sort=<%= sort || 'desc' %>" class="pagination-btn">1</a>
              <% if (startPage > 2) { %>
                <span class="pagination-dots">...</span>
              <% } %>
            <% } %>

            <% for (let i = startPage; i <= endPage; i++) { %>
              <% if (i === currentPage) { %>
                <span class="pagination-btn active"><%= i %></span>
              <% } else { %>
                <a href="?page=<%= i %>&search=<%= search || '' %>&sort=<%= sort || 'desc' %>" class="pagination-btn"><%= i %></a>
              <% } %>
            <% } %>

            <% if (endPage < totalPages) { %>
              <% if (endPage < totalPages - 1) { %>
                <span class="pagination-dots">...</span>
              <% } %>
              <a href="?page=<%= totalPages %>&search=<%= search || '' %>&sort=<%= sort || 'desc' %>" class="pagination-btn"><%= totalPages %></a>
            <% } %>

            <% if (currentPage < totalPages) { %>
              <a href="?page=<%= currentPage + 1 %>&search=<%= search || '' %>&sort=<%= sort || 'desc' %>" class="pagination-btn">
                Next →
              </a>
            <% } else { %>
              <span class="pagination-btn disabled">Next →</span>
            <% } %>
          </div>
        </div>
      <% } %>

    <% } else { %>
      <div class="no-returns">
        <div class="empty-state">
          <i class="fas fa-inbox fa-3x"></i>
          <h3>No Return Requests Found</h3>
          <p>There are currently no pending return requests.</p>
          <a href="/admin/orders" class="action-btn view-btn">
            <i class="fas fa-arrow-left"></i>
            Back to Orders
          </a>
        </div>
      </div>
    <% } %>
    </div>
  </div>

  <%- include('../partials/admin/footer') %>

  <script>
    async function acceptReturn(orderId) {
      const result = await Swal.fire({
        title: 'Accept Return Request?',
        text: 'This will approve the return and process the refund if applicable.',
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#28a745',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Yes, Accept Return',
        cancelButtonText: 'Cancel'
      });

      if (result.isConfirmed) {
        try {
          const response = await fetch(`/admin/order/return/accept/${orderId}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            }
          });

          const data = await response.json();

          if (data.success) {
            await Swal.fire({
              title: 'Return Accepted!',
              text: data.message,
              icon: 'success',
              confirmButtonColor: '#28a745'
            });
            window.location.reload();
          } else {
            throw new Error(data.message || 'Failed to accept return');
          }
        } catch (error) {
          await Swal.fire({
            title: 'Error!',
            text: error.message || 'Something went wrong while accepting the return.',
            icon: 'error',
            confirmButtonColor: '#dc3545'
          });
        }
      }
    }

    async function declineReturn(orderId) {
      const result = await Swal.fire({
        title: 'Decline Return Request?',
        text: 'This will reject the return request. The customer will be notified.',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#dc3545',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Yes, Decline Return',
        cancelButtonText: 'Cancel'
      });

      if (result.isConfirmed) {
        try {
          const response = await fetch(`/admin/order/return/decline/${orderId}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            }
          });

          const data = await response.json();

          if (data.success) {
            await Swal.fire({
              title: 'Return Declined!',
              text: data.message,
              icon: 'success',
              confirmButtonColor: '#28a745'
            });
            window.location.reload();
          } else {
            throw new Error(data.message || 'Failed to decline return');
          }
        } catch (error) {
          await Swal.fire({
            title: 'Error!',
            text: error.message || 'Something went wrong while declining the return.',
            icon: 'error',
            confirmButtonColor: '#dc3545'
          });
        }
      }
    }
    async function acceptItemReturn(orderId, productId) {
      const result = await Swal.fire({
        title: 'Accept Item Return?',
        text: 'This will approve the item return and process the refund if applicable.',
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#28a745',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Yes, Accept Item Return',
        cancelButtonText: 'Cancel'
      });

      if (result.isConfirmed) {
        try {
          const response = await fetch(`/admin/order/${orderId}/item/${productId}/return/accept`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            }
          });

          const data = await response.json();

          if (data.success) {
            await Swal.fire({
              title: 'Item Return Accepted!',
              text: data.message,
              icon: 'success',
              confirmButtonColor: '#28a745'
            });
            window.location.reload();
          } else {
            throw new Error(data.message || 'Failed to accept item return');
          }
        } catch (error) {
          await Swal.fire({
            title: 'Error!',
            text: error.message || 'Something went wrong while accepting the item return.',
            icon: 'error',
            confirmButtonColor: '#dc3545'
          });
        }
      }
    }

    async function declineItemReturn(orderId, productId) {
      const result = await Swal.fire({
        title: 'Decline Item Return?',
        text: 'This will reject the item return request. The customer will be notified.',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#dc3545',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Yes, Decline Item Return',
        cancelButtonText: 'Cancel'
      });

      if (result.isConfirmed) {
        try {
          const response = await fetch(`/admin/order/${orderId}/item/${productId}/return/decline`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            }
          });

          const data = await response.json();

          if (data.success) {
            await Swal.fire({
              title: 'Item Return Declined!',
              text: data.message,
              icon: 'success',
              confirmButtonColor: '#28a745'
            });
            window.location.reload();
          } else {
            throw new Error(data.message || 'Failed to decline item return');
          }
        } catch (error) {
          await Swal.fire({
            title: 'Error!',
            text: error.message || 'Something went wrong while declining the item return.',
            icon: 'error',
            confirmButtonColor: '#dc3545'
          });
        }
      }
    }
  </script>
</body>
</html>