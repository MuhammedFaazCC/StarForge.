<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Edit Product - StarForge</title>
  <link rel="stylesheet" href="/css/admin/addProduct.css">
  <style>
    /* Overlay for lazy loading */
    .loading-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.7);
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      z-index: 9999;
      visibility: hidden;
      opacity: 0;
      transition: opacity 0.3s, visibility 0.3s;
    }
    .loading-overlay.active {
      visibility: visible;
      opacity: 1;
    }
    .spinner {
      border: 6px solid rgba(255, 255, 255, 0.3);
      border-radius: 50%;
      border-top: 6px solid #ffffff;
      width: 50px;
      height: 50px;
      animation: spin 1s linear infinite;
      margin-bottom: 15px;
    }
    .loading-text {
      color: white;
      font-size: 18px;
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    /* Custom style for wider SweetAlert */
    .swal-wide {
      width: 500px !important;
    }
  </style>
</head>
<body>

    <%- include('../partials/admin/navbar') %>

  <div class="container">
    <h2>Edit Product</h2>
    <% if (message) { %>
      <div class="alert alert-<%= message.type %>">
        <%= message.text %>
      </div>
    <% } %>
    <form id="editProductForm" action="/admin/products/edit/<%= product._id %>" method="POST" enctype="multipart/form-data">
      <div class="form-group">
        <label for="name">Product Name</label>
        <input type="text" id="name" name="name" value="<%= product.name %>" required>
      </div>
      <div class="form-group">
        <label for="brand">Brand</label>
        <input type="text" id="brand" name="brand" value="<%= product.brand %>" required>
      </div>
      <div class="form-group">
        <label for="price">Price</label>
        <input type="number" id="price" name="price" step="0.01" value="<%= product.price %>" required>
      </div>
      <div class="form-group">
        <label for="offer">Offer (%)</label>
        <input type="number" id="offer" name="offer" step="0.01" value="<%= product.offer %>">
      </div>
      <div class="form-group">
        <label for="description">Description</label>
        <textarea id="description" name="description"><%= product.description %></textarea>
      </div>
      <div class="form-group">
        <label for="category">Category</label>
        <select id="category" name="category" required>
          <% categories.forEach(category => { %>
            <option value="<%= category._id %>" <%= product.category.toString() === category._id.toString() ? 'selected' : '' %>>
              <%= category.name %>
            </option>
          <% }) %>
        </select>
      </div>
      <div class="form-group">
        <label for="sizes">Sizes (comma-separated)</label>
        <input type="text" id="sizes" name="sizes" value="<%= product.sizes.join(', ') %>">
      </div>
      <div class="form-group">
        <label for="rimMaterial">Rim Material</label>
        <input type="text" id="rimMaterial" name="rimMaterial" value="<%= product.rimMaterial %>">
      </div>
      <div class="form-group">
        <label for="finish">Finish</label>
        <input type="text" id="finish" name="finish" value="<%= product.finish %>">
      </div>
      <div class="form-group">
        <label for="stock">Stock</label>
        <input type="number" id="stock" name="stock" value="<%= product.stock %>" required>
      </div>
      <div class="form-group">
        <label for="boltPattern">Bolt Pattern</label>
        <input type="text" id="boltPattern" name="boltPattern" value="<%= product.specifications.boltPattern %>">
      </div>
      <div class="form-group">
        <label for="hubBore">Hub Bore</label>
        <input type="text" id="hubBore" name="hubBore" value="<%= product.specifications.hubBore %>">
      </div>
      <div class="form-group">
        <label for="offset">Offset</label>
        <input type="text" id="offset" name="offset" value="<%= product.specifications.offset %>">
      </div>
      <div class="form-group">
        <label for="color">Color</label>
        <input type="text" id="color" name="color" value="<%= product.specifications.color %>">
      </div>
      <div class="form-group">
        <label for="loadRating">Load Rating</label>
        <input type="text" id="loadRating" name="loadRating" value="<%= product.specifications.loadRating %>">
      </div>
      <div class="form-group">
        <label for="additionalInfo">Additional Info (comma-separated)</label>
        <input type="text" id="additionalInfo" name="additionalInfo" value="<%= product.specifications.additionalInfo.join(', ') %>">
      </div>
      <div class="form-group">
        <label for="mainImage">Main Image (Current: <%= product.mainImage || 'None' %>)</label>
        <input type="file" id="mainImage" name="mainImage" accept="image/jpeg,image/png">
      </div>
      <div class="form-group">
        <label for="additionalImages">Additional Images (Current: <%= product.additionalImages.length %>)</label>
        <input type="file" id="additionalImages" name="additionalImages" accept="image/jpeg,image/png" multiple>
      </div>
      <button type="submit" id="updateButton">Update Product</button>
    </form>
  </div>

  <!-- Loading Overlay -->
  <div class="loading-overlay" id="loadingOverlay">
    <div class="spinner"></div>
    <div class="loading-text">Updating product...</div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    // Show success message using SweetAlert if message.type is 'success'
    <% if (message && message.type === 'success') { %>
      Swal.fire({
        icon: 'success',
        title: 'Success!',
        text: '<%= message.text %>',
        timer: 2000,
        showConfirmButton: false
      });
    <% } %>

    const form = document.getElementById("editProductForm");
    const loadingOverlay = document.getElementById("loadingOverlay");

    form.addEventListener("submit", function (e) {
      e.preventDefault(); // Always prevent default to handle submission manually
      
      // Validate form
      let isValid = true;
      let errorMsg = "";

      const name = document.getElementById("name");
      const brand = document.getElementById("brand");
      const price = document.getElementById("price");
      const stock = document.getElementById("stock");
      const sizes = document.getElementById("sizes");
      const category = document.getElementById("category");

      if (name.value.trim().length < 3) {
        errorMsg += "Product name must be at least 3 characters.\n";
        isValid = false;
      }
      if (brand.value.trim().length < 2) {
        errorMsg += "Brand must be at least 2 characters.\n";
        isValid = false;
      }
      if (Number(price.value) <= 0) {
        errorMsg += "Price must be a positive number.\n";
        isValid = false;
      }
      if (Number(stock.value) < 0) {
        errorMsg += "Stock cannot be negative.\n";
        isValid = false;
      }
      if (!sizes.value.trim()) {
        errorMsg += "Sizes are required.\n";
        isValid = false;
      }
      if (!category.value) {
        errorMsg += "Category must be selected.\n";
        isValid = false;
      }

      if (!isValid) {
        // Show validation error message
        Swal.fire({
          icon: 'error',
          title: 'Validation Error',
          text: errorMsg,
          customClass: {
            popup: 'swal-wide'
          }
        });
        return;
      }

      // If validation passes, show confirmation dialog
      Swal.fire({
        title: 'Update Product',
        text: 'Are you sure you want to update this product?',
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, update it!'
      }).then((result) => {
        if (result.isConfirmed) {
          // Show loading overlay
          loadingOverlay.classList.add('active');
          
          // Submit the form after a short delay to show the loading state
          setTimeout(() => {
            form.submit();
          }, 500);
        }
      });
    });
  </script>
</body>
</html>