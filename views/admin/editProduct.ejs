<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Edit Product - StarForge</title>
  <link rel="stylesheet" href="/css/admin/addProduct.css">
</head>
<body>

    <%- include('../partials/admin/navbar') %>

  <div class="container">
    <h2>Edit Product</h2>
    <% if (message) { %>
      <div class="alert alert-<%= message.type %>">
        <%= message.text %>
      </div>
    <% } %>
    <form id="editProductForm" action="/admin/products/edit/<%= product._id %>" method="POST" enctype="multipart/form-data">
      <div class="form-group">
        <label for="name">Product Name</label>
        <input type="text" id="name" name="name" value="<%= product.name %>" >
        <div class="error-message" id="name-error">Product name must be at least 3 characters.</div>
      </div>
      <div class="form-group">
        <label for="brand">Brand</label>
        <input type="text" id="brand" name="brand" value="<%= product.brand %>" >
        <div class="error-message" id="brand-error">Brand must be at least 2 characters.</div>
      </div>
      <div class="form-group">
        <label for="price">Price</label>
        <input type="number" id="price" name="price" step="0.01" value="<%= product.price %>" >
        <div class="error-message" id="price-error">Price must be a positive number.</div>
      </div>
      <div class="form-group">
        <label for="offer">Offer (%)</label>
        <input type="number" id="offer" name="offer" step="0.01" value="<%= product.offer %>">
        <div class="error-message" id="offer-error">Offer must be between 0 and 100.</div>
      </div>
      <div class="form-group">
        <label for="description">Description</label>
        <textarea id="description" name="description"><%= product.description %></textarea>
        <div class="error-message" id="description-error">Description cannot be empty.</div>
      </div>
      <div class="form-group">
        <label for="category">Category</label>
        <select id="category" name="category" >
          <option value="">Select a category</option>
          <% categories.forEach(category => { %>
            <option value="<%= category._id %>" <%= product.category.toString() === category._id.toString() ? 'selected' : '' %>>
              <%= category.name %>
            </option>
          <% }) %>
        </select>
        <div class="error-message" id="category-error">Category must be selected.</div>
      </div>
      <div class="form-group">
        <label for="sizes">Sizes (comma-separated)</label>
        <input type="text" id="sizes" name="sizes" value="<%= product.sizes.join(', ') %>">
        <div class="error-message" id="sizes-error">Sizes are required.</div>
      </div>
      <div class="form-group">
        <label for="rimMaterial">Rim Material</label>
        <input type="text" id="rimMaterial" name="rimMaterial" value="<%= product.rimMaterial %>">
        <div class="error-message" id="rimMaterial-error">Rim Material cannot be empty.</div>
      </div>
      <div class="form-group">
        <label for="stock">Stock</label>
        <input type="number" id="stock" name="stock" value="<%= product.stock %>" >
        <div class="error-message" id="stock-error">Stock cannot be negative.</div>
      </div>
      <div class="form-group">
        <label for="mainImage">Main Image (Current: <%= product.mainImage || 'None' %>)</label>
        <input type="file" id="mainImage" name="mainImage" accept="image/jpeg,image/png,image/jpg,image/webp">
        <div class="error-message" id="mainImage-error">Main image must be a valid JPEG or PNG file.</div>
      </div>
      <div class="form-group">
        <label for="additionalImages">Additional Images (Current: <%= product.additionalImages.length %>)</label>
        <input type="file" id="additionalImages" name="additionalImages" accept="image/jpeg,image/png,image/jpg,image/webp" multiple>
        <div class="error-message" id="additionalImages-error">Additional images must be valid JPEG or PNG files.</div>
      </div>
      <button type="submit" id="updateButton">Update Product</button>
    </form>
  </div>

  <div class="loading-overlay" id="loadingOverlay">
    <div class="spinner"></div>
    <div class="loading-text">Updating product...</div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
   
    const form = document.getElementById("editProductForm");
    const loadingOverlay = document.getElementById("loadingOverlay");

    function clearErrors() {
      document.querySelectorAll('.form-group').forEach(group => {
        group.classList.remove('error');
      });
    }

    form.addEventListener("submit", function (e) {
      e.preventDefault();
      
      clearErrors();

      let isValid = true;
      const errors = [];

      const name = document.getElementById("name");
      const brand = document.getElementById("brand");
      const price = document.getElementById("price");
      const offer = document.getElementById("offer");
      const description = document.getElementById("description");
      const category = document.getElementById("category");
      const sizes = document.getElementById("sizes");
      const rimMaterial = document.getElementById("rimMaterial");
      const stock = document.getElementById("stock");
      const color = document.getElementById("color");
      const mainImage = document.getElementById("mainImage");
      const additionalImages = document.getElementById("additionalImages");

      if (name.value.trim().length < 3) {
        document.getElementById("name").parentElement.classList.add('error');
        errors.push("Product name must be at least 3 characters.");
        isValid = false;
      }
      if (brand.value.trim().length < 2) {
        document.getElementById("brand").parentElement.classList.add('error');
        errors.push("Brand must be at least 2 characters.");
        isValid = false;
      }
      if (Number(price.value) <= 0) {
        document.getElementById("price").parentElement.classList.add('error');
        errors.push("Price must be a positive number.");
        isValid = false;
      }
      if (offer.value && (Number(offer.value) < 0 || Number(offer.value) > 100)) {
        document.getElementById("offer").parentElement.classList.add('error');
        errors.push("Offer must be between 0 and 100.");
        isValid = false;
      }
      if (!description.value.trim()) {
        document.getElementById("description").parentElement.classList.add('error');
        errors.push("Description cannot be empty.");
        isValid = false;
      }
      if (!category.value) {
        document.getElementById("category").parentElement.classList.add('error');
        errors.push("Category must be selected.");
        isValid = false;
      }
      if (!sizes.value.trim()) {
        document.getElementById("sizes").parentElement.classList.add('error');
        errors.push("Sizes are required.");
        isValid = false;
      }
      if (!rimMaterial.value.trim()) {
        document.getElementById("rimMaterial").parentElement.classList.add('error');
        errors.push("Rim Material cannot be empty.");
        isValid = false;
      }
      if (Number(stock.value) < 0) {
        document.getElementById("stock").parentElement.classList.add('error');
        errors.push("Stock cannot be negative.");
        isValid = false;
      }
      
      if (mainImage.files.length > 0) {
        const validImageTypes = ['image/jpeg','image/jpg','image/webp', 'image/png'];
        if (!validImageTypes.includes(mainImage.files[0].type)) {
          document.getElementById("mainImage").parentElement.classList.add('error');
          errors.push("Main image must be a valid JPEG or PNG file.");
          isValid = false;
        }
      }
      if (additionalImages.files.length > 0) {
        const validImageTypes = ['image/jpeg','image/jpg','image/webp', 'image/png'];
        for (let file of additionalImages.files) {
          if (!validImageTypes.includes(file.type)) {
            document.getElementById("additionalImages").parentElement.classList.add('error');
            errors.push("Additional images must be valid JPEG or PNG files.");
            isValid = false;
            break;
          }
        }
      }

      if (!isValid) {
        Swal.fire({
          icon: 'error',
          title: 'Validation Error',
          html: errors.join('<br>'),
          customClass: {
            popup: 'swal-wide'
          }
        });
        return;
      }

      Swal.fire({
        title: 'Update Product',
        text: 'Are you sure you want to update this product?',
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, update it!'
      }).then((result) => {
        if (result.isConfirmed) {
          loadingOverlay.classList.add('active');
          
          setTimeout(() => {
            form.submit();
          }, 500);
        }
      });
    });
  </script>
</body>
</html>